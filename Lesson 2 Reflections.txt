What happens when you initialize a repository? Why do you need to do it?

	Git creates its infrastructure layout for keeping track of file versions.  It does not create any "commits."
	You need to do it in order to have any kind of version tracking enabled, obviously.

How is the staging area different from the working directory and the repository?  What value do you think it offers?

	The staging area makes it possible to select specific items to be defined as 'currently being worked on' without necessarily committing them.  This way if some items do not require changes at this time, they need not be tracked.  This probably conserves disk space for future commits by not creating needless copies of identical files.


How can you use the staging area to make sure you have one commit per logical change? 
	The use of diff can be helpful, or by only adding one file at a time to make logical changes to them.

What are some situations when branches would be helpful in keeping your history organized?  How would branches help?

	Special versions.  Alternate language versions.  Versions for which a selector might be added later to the master to swap between them.  Alternate OS versions.  
	The branches help by keeping code changes in the various kinds separate.  One wouldn't necessarily want a smartphone outlay on the PC version now would we? 